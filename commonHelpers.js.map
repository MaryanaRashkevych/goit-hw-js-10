{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nlet userSelectedDate;\nlet timerInterval;\n\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n      const currentDate = new Date();\n      if (userSelectedDate < currentDate) {\n        window.alert(\"Please choose a date in the future\");\n        disableStartButton();\n      } else {\n        enableStartButton();\n      }\n    },\n  };\n  \n  const datetimePicker = document.getElementById(\"datetime-picker\");\n  flatpickr(datetimePicker, options);\n  \n  function disableStartButton() {\n    const startButton = document.querySelector('[data-start]');\n    startButton.disabled = true;\n  }\n  \n  function enableStartButton() {\n    const startButton = document.querySelector('[data-start]');\n    startButton.disabled = false;\n  }\n  \n\n  document.querySelector('[data-start]').addEventListener('click', function() {\n    datetimePicker.disabled = true;\n    disableStartButton();\n    startTimer();\n  });\n  \n  // start the countdown timer\n  function startTimer() {\n    timerInterval = setInterval(function() {\n      const currentDate = new Date();\n      const timeDifference = userSelectedDate - currentDate;\n  \n      if (timeDifference <= 0) {\n        clearInterval(timerInterval);\n        return;\n      }\n  \n      const { days, hours, minutes, seconds } = convertMs(timeDifference);\n  \n      // Display the remaining time \n      document.querySelector('[data-days]').textContent = addLeadingZero(days);\n      document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n      document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n      document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n    }, 1000);\n  }\n  \n  // Function to add leading zero\n  function addLeadingZero(value) {\n    return value < 10 ? `0${value}` : value;\n  }\n  \n  // convert milliseconds \n  function convertMs(ms) {\n   \n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n \n    \n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor((ms % hour) / minute);\n    const seconds = Math.floor((ms % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n"],"names":["userSelectedDate","timerInterval","options","selectedDates","disableStartButton","enableStartButton","datetimePicker","flatpickr","startButton","startTimer","timeDifference","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"wIAKA,IAAIA,EACAC,EAGJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAE9BH,EADgB,IAAI,MAEtB,OAAO,MAAM,oCAAoC,EACjDI,KAEAC,GAEH,CACL,EAEQC,EAAiB,SAAS,eAAe,iBAAiB,EAChEC,EAAUD,EAAgBJ,CAAO,EAEjC,SAASE,GAAqB,CAC5B,MAAMI,EAAc,SAAS,cAAc,cAAc,EACzDA,EAAY,SAAW,EACxB,CAED,SAASH,GAAoB,CAC3B,MAAMG,EAAc,SAAS,cAAc,cAAc,EACzDA,EAAY,SAAW,EACxB,CAGD,SAAS,cAAc,cAAc,EAAE,iBAAiB,QAAS,UAAW,CAC1EF,EAAe,SAAW,GAC1BF,IACAK,GACJ,CAAG,EAGD,SAASA,GAAa,CACpBR,EAAgB,YAAY,UAAW,CAErC,MAAMS,EAAiBV,EADH,IAAI,KAGxB,GAAIU,GAAkB,EAAG,CACvB,cAAcT,CAAa,EAC3B,MACD,CAED,KAAM,CAAE,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAc,EAGlE,SAAS,cAAc,aAAa,EAAE,YAAcM,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CAC9E,EAAE,GAAI,CACR,CAGD,SAASE,EAAeC,EAAO,CAC7B,OAAOA,EAAQ,GAAK,IAAIA,CAAK,GAAKA,CACnC,CAGD,SAASF,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAC1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EACpCL,EAAU,KAAK,MAAOK,EAAK,KAAQ,GAAM,EACzCJ,EAAU,KAAK,MAAOI,EAAK,IAAU,GAAM,EAEjD,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}